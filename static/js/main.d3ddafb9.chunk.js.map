{"version":3,"sources":["components/CalendarComponent.js","components/DataComponent.js","components/SwitchComponent.js","components/Charts/ChartComponent.js","components/LoaderComponent.js","screens/HomePage.js","components/Drawer/DrawerComponent.js","components/NationDataComponent.js","screens/Nations.js","components/HeaderComponent.js","screens/Index.js","services/history.js","components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["CalendarComponent","props","state","date_start","Date","date_end","this","dates","value","options","mode","dateFormat","enableTime","onChange","Component","DataComponent","casesInWorld","deathInWorld","healedInWorld","formattedDate","className","Intl","NumberFormat","format","SwitchComponent","FormControlLabel","control","Switch","size","checked","label","ChartComponent","series","React","useMemo","type","data","length","style","height","display","flex","axes","tooltip","LoaderComponent","HomePage","_handleChangeCalendar","a","setState","isReadyChart","isLoading","dataForChart","stats","timeseries","filterMultipleDates","filterSingleDate","period","lastUpdate","showCalendar","bind","_handleToggleCalendar","items","setInitialState","updateChart","filteredTimeseries","prepareDataForChart","deaths","confirmed","recovered","last_update","ts","chartAxes","primary","time","unit","position","returnData","reverse","map","index","timestamp","moment","unix","t","tz","toDate","c","date","singleDate","tsDate","parseInt","dayBeforeTs","filter","dayBeforeStats","d","r","start_date","end_date","ts_start","ts_end","arrLen","lastNotEmptyDate","getLastNotEmptyDate","key","month","getMonth","getDate","getFullYear","paddingLeft","marginRight","justifyContent","DrawerComponent","Drawer","anchor","open","onClose","List","name","icon","isLink","link","option","Paper","ListItem","button","onClick","onItemClick","ListItemText","NationDataComponent","todayCases","todayDeaths","casesPerOneMillion","deathsPerOneMillion","cases","active","critical","Nations","_handleOnChange","selectedOption","fetchData","nations","Axios","get","then","res","nation","toLowerCase","result","status","dataComponent","view","placeholder","HeaderComponent","toggleDrawer","openDrawer","drawerItemClick","page","href","Button","variant","Index","_handleDrawerItemClick","currentPage","datas","dataPerDate","renderSwitchComponent","itemsPerDate","history","createBrowserHistory","Routes","basename","process","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d3ddafb9.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport \"flatpickr/dist/themes/material_green.css\";\r\nimport FlatPickr from 'react-flatpickr';\r\nexport default class CalendarComponent extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            date_start:new Date(),\r\n            date_end:null\r\n        };\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        let {dates,date_start}= this.props;\r\n        return (\r\n            <FlatPickr\r\n                value={dates}\r\n                options={{\r\n                    mode:'range',\r\n                    dateFormat: \"d/m/Y\",\r\n                    enableTime:true,\r\n\r\n                }}\r\n                onChange={(dates)=>this.props.onChange(dates)}\r\n            />\r\n        );\r\n    }\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nfunction DataComponent(props) {\r\n\r\n    let {casesInWorld,deathInWorld,healedInWorld,formattedDate}= props;\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <div className=\"flex flex-column p-10\">\r\n                <div>\r\n                    <p>Total Coronavirus cases in the world : {new Intl.NumberFormat('it-IT').format(casesInWorld)}</p>\r\n                </div>\r\n                <div>\r\n                    <p>Total deaths in the world : {new Intl.NumberFormat('it-IT').format(deathInWorld)}</p>\r\n                </div>\r\n                <div>\r\n                    <p>Total healed in the world : {new Intl.NumberFormat('it-IT').format(healedInWorld)}</p>\r\n                </div>\r\n                <div>\r\n                    <p> Last update info : {  formattedDate }</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DataComponent;\r\n","import React from \"react\";\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nfunction SwitchComponent(props){\r\n\r\n    return (\r\n        <FormControlLabel\r\n            control={<Switch size={props.size} checked={props.checked} onChange={()=> props.onChange()} />}\r\n            label=\"Filter per date\"\r\n        />\r\n    );\r\n\r\n}\r\n\r\nexport default SwitchComponent;\r\n","import React from 'react'\r\nimport { Chart } from 'react-charts'\r\n\r\nexport default function ChartComponent(props) {\r\n\r\n    const series = React.useMemo(\r\n        () => ({\r\n            type: 'area'\r\n        }),\r\n        []\r\n    )\r\n\r\n    const {data}=props;\r\n    const lineChart = data.length>0 ? (\r\n        // A react-chart hyper-responsively and continuously fills the available\r\n        // space of its parent element automatically\r\n        <div>\r\n            <div\r\n                className=\"container\"\r\n                style={{\r\n                    height: '600px',\r\n                    display:'flex',\r\n                    flex:1\r\n                }}\r\n            >\r\n\r\n                <Chart data={data}  series={series} axes={props.axes} tooltip />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div>\r\n            <p>No data available</p>\r\n        </div>\r\n    );\r\n\r\n    return lineChart;\r\n}\r\n","import React from \"react\";\r\n\r\n\r\n\r\nfunction LoaderComponent(props) {\r\n\r\n    return (\r\n        <div className=\"loader center\">\r\n            <i className=\"fa fa-cog fa-spin fa-7x\" />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default LoaderComponent;\r\n","import React, {Component} from \"react\";\r\nimport CalendarComponent from \"../components/CalendarComponent\";\r\nimport DataComponent from \"../components/DataComponent\";\r\nimport moment from 'moment';\r\nimport tz from 'moment-timezone';\r\nimport SwitchComponent from \"../components/SwitchComponent\";\r\nimport ChartComponent from \"../components/Charts/ChartComponent\";\r\nimport LoaderComponent from \"../components/LoaderComponent\";\r\nclass HomePage extends Component{\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            isLoading:true,\r\n            deathInWorld:0,\r\n            casesInWorld:0,\r\n            healedInWorld:0,\r\n            lastUpdate:null,\r\n            showCalendar:false,\r\n            timeseries:null,\r\n            period:null\r\n        };\r\n        this._handleChangeCalendar= this._handleChangeCalendar.bind(this);\r\n        this._handleToggleCalendar= this._handleToggleCalendar.bind(this);\r\n    }\r\n\r\n     async componentDidMount() {\r\n\r\n        if(this.props.items){\r\n\r\n            let {items} = this.props;\r\n\r\n            await this.setInitialState(items);\r\n\r\n            await this.updateChart(this.state.timeseries);\r\n            await this.setState({isReadyChart:true});\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    async updateChart(timeseries) {\r\n\r\n\r\n        await this.setState({filteredTimeseries:timeseries});\r\n\r\n        await this.prepareDataForChart(timeseries);\r\n    }\r\n\r\n    async setInitialState(items) {\r\n        await this.setState({\r\n            deathInWorld:items.deaths,\r\n            casesInWorld:items.confirmed,\r\n            healedInWorld:items.recovered,\r\n            lastUpdate: new Date(items.last_update),\r\n            isLoading:false,\r\n            timeseries:items.ts,\r\n            filteredTimeseries:[],\r\n            dataForChart:null,\r\n            isReadyChart:false,\r\n            chartAxes: [\r\n                {\r\n                    primary: true,\r\n                    type: 'time',\r\n                    time:{\r\n                        unit: 'day'\r\n                    },\r\n                    position: 'bottom'\r\n                },\r\n                { type: 'linear', position: 'left' }\r\n            ]\r\n        });\r\n    }\r\n\r\n    async prepareDataForChart(timeseries) {\r\n\r\n        let returnData=[];\r\n\r\n        await timeseries.reverse().map((data,index)=>{\r\n            let timestamp= moment.unix(data.t).tz('Europe/Rome');\r\n            returnData[index]={\r\n                label: timestamp.format('DD-MM-YYYY'),\r\n                data: [[timestamp.toDate(),data.c]]\r\n            }\r\n        });\r\n\r\n        await this.setState({dataForChart:returnData});\r\n\r\n\r\n    }\r\n\r\n    async filterSingleDate(date,timeseries) {\r\n\r\n        let singleDate= moment(date).tz(\"America/New_York\").format('YYYY-MM-DD');\r\n        let tsDate= moment(singleDate).format('X');\r\n        tsDate= parseInt(tsDate) +3600;\r\n        let dayBeforeTs= tsDate- 86400; //seconds in a day;\r\n        let filteredTimeseries=await timeseries.filter((value => {\r\n            return value.t>dayBeforeTs  && value.t <=tsDate;\r\n        }));\r\n        let dayBeforeStats= await timeseries.filter((value => {\r\n            return value.t>= dayBeforeTs && value.t <= dayBeforeTs;\r\n        }));\r\n\r\n        await this.updateChart(filteredTimeseries);\r\n\r\n        let deathInWorld=0;\r\n        let healedInWorld=0;\r\n        let casesInWorld=0;\r\n        let arrLen=filteredTimeseries.length;\r\n        if(arrLen>0){\r\n            deathInWorld= filteredTimeseries[0].d - dayBeforeStats[0].d;\r\n            healedInWorld= filteredTimeseries[0].r - dayBeforeStats[0].r;\r\n            casesInWorld= filteredTimeseries[0].c - dayBeforeStats[0].c ;\r\n        }\r\n\r\n        return {\r\n            deathInWorld,\r\n            healedInWorld,\r\n            casesInWorld\r\n        };\r\n\r\n    }\r\n\r\n    async filterMultipleDates(dates,timeseries) {\r\n\r\n        let start_date= moment(dates[0]).tz('GMT').format('YYYY-MM-DD');\r\n        let end_date= moment(dates[1]).tz('GMT').format('YYYY-MM-DD');\r\n        let ts_start= moment(start_date).format('X');\r\n        let ts_end= parseInt(moment(end_date).format('X'));\r\n        ts_end+=3600;\r\n\r\n        let filteredTimeseries=await  timeseries.filter((value => {\r\n            return value.t>=ts_start  && value.t <=ts_end;\r\n        }));\r\n\r\n         this.updateChart(filteredTimeseries);\r\n\r\n        let deathInWorld=0;\r\n        let healedInWorld=0;\r\n        let casesInWorld=0;\r\n        let arrLen=filteredTimeseries.length;\r\n\r\n        if(arrLen>0){\r\n            let lastNotEmptyDate= filteredTimeseries[arrLen-1];\r\n\r\n            if(!lastNotEmptyDate.d){\r\n                lastNotEmptyDate= this.getLastNotEmptyDate(filteredTimeseries);\r\n\r\n            }\r\n\r\n            deathInWorld= filteredTimeseries[0].d;\r\n            healedInWorld= filteredTimeseries[0].r;\r\n            casesInWorld= filteredTimeseries[0].c;\r\n\r\n\r\n\r\n            if(arrLen>1){\r\n\r\n\r\n\r\n                deathInWorld =   lastNotEmptyDate.d -deathInWorld ;\r\n                healedInWorld = lastNotEmptyDate.r - healedInWorld;\r\n                casesInWorld = lastNotEmptyDate.c - casesInWorld;\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return {\r\n            deathInWorld,\r\n            healedInWorld,\r\n            casesInWorld\r\n        };\r\n\r\n    }\r\n\r\n     _handleChangeCalendar=async (dates)=>{\r\n\r\n        this.setState({isReadyChart:false,isLoading:true,dataForChart:null});\r\n        let stats=null;\r\n        let {timeseries} = this.state;\r\n        if(dates.length>1){\r\n\r\n            stats=await this.filterMultipleDates(dates,timeseries);\r\n\r\n        } else {\r\n           stats=await this.filterSingleDate(dates[0],timeseries);\r\n\r\n        }\r\n\r\n\r\n\r\n        await this.setState({\r\n            casesInWorld:stats.casesInWorld,\r\n            deathInWorld:stats.deathInWorld,\r\n            healedInWorld:stats.healedInWorld,\r\n            period:dates\r\n        });\r\n\r\n         await this.setState({isReadyChart:true,isLoading:false});\r\n\r\n    }\r\n\r\n\r\n    getLastNotEmptyDate(filteredTimeseries) {\r\n\r\n        for (let key= 0; key<=filteredTimeseries.length;key++){\r\n\r\n            if(filteredTimeseries[key]){\r\n                return filteredTimeseries[key];\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    _handleToggleCalendar() {\r\n\r\n        this.setState({\r\n            showCalendar:!this.state.showCalendar\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n            let {isLoading,lastUpdate,showCalendar,dataForChart,chartAxes,isReadyChart,period}=this.state;\r\n            let formattedDate=null;\r\n            if(lastUpdate instanceof Date){\r\n                //getMonth returns value from 0\r\n                let month=lastUpdate.getMonth()+1;\r\n                formattedDate= lastUpdate.getDate()+'/'+ month +'/'+ lastUpdate.getFullYear();\r\n            }\r\n\r\n            let data= !isLoading && isReadyChart ? (\r\n                <div className=\"mt-5\">\r\n\r\n                    <div className=\"flex flex-center row\" style={{paddingLeft:30}}>\r\n                        <div className=\"col-md-6\">\r\n                            <p\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    flex: 1,\r\n                                    marginRight: 35,\r\n                                    justifyContent: 'flex-end'\r\n                                }}\r\n                            >\r\n                                {/*<a onClick={()=>this._handleToggleCalendar()}>Filter per date</a>*/}\r\n                                <SwitchComponent size=\"medium\" checked={showCalendar} onChange={this._handleToggleCalendar}   />\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"flex-row-start col-md-6\">\r\n                            {\r\n                                showCalendar ? (\r\n                                    <CalendarComponent dates={period} onChange={this._handleChangeCalendar}></CalendarComponent>\r\n                                ) : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        isReadyChart ? ( <ChartComponent data={dataForChart} axes={chartAxes} /> ) : null\r\n                    }\r\n\r\n                    <DataComponent {...this.state} formattedDate={formattedDate}></DataComponent>\r\n\r\n\r\n                </div>\r\n            ) : (\r\n                <LoaderComponent/>\r\n            );\r\n            return (\r\n                <div className=\"home\">\r\n                    {/*<div className=\"globe\">\r\n                        <i className=\"fa fa-globe fa-10x\" style={{color: '#fff'}}></i>\r\n                    </div>*/}\r\n                    {data}\r\n                </div>\r\n            )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport './DrawerComponent.css';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nexport default function DrawerComponent(props){\r\n\r\n    let options=[\r\n        {\r\n            name:'HomePage',\r\n            icon:'fa fa-globe',\r\n            isLink:true,\r\n            link:'HomePage'\r\n        },\r\n        {\r\n            name:'Nations',\r\n            icon:'fa fa-location-arrow',\r\n            isLink:true,\r\n            link:'Nations'\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n\r\n        <Drawer className=\"drawer\" anchor={props.anchor} open={props.open} onClose={()=> props.onClose()}>\r\n            <List className=\"drawer-list\">\r\n                {\r\n                    options.map((option,index)=>(\r\n                        <Paper  key={index}>\r\n                            <ListItem key={index} button onClick={()=>props.onItemClick(option.link)} className=\"drawer-list-item\">\r\n                                <i className={option.icon}></i>\r\n                                <ListItemText className=\"ml-4 pt-2\" primary={<p>{option.name}</p>}></ListItemText>\r\n\r\n                            </ListItem>\r\n                        </Paper>\r\n                    ))\r\n                }\r\n            </List>\r\n        </Drawer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {Paper} from \"@material-ui/core\";\r\n\r\nexport default function NationDataComponent(props) {\r\n\r\n    let {todayCases,todayDeaths,casesPerOneMillion,deathsPerOneMillion}=props.data;\r\n    let {cases,deaths,recovered,active,critical}=props.data;\r\n    return (\r\n\r\n        <div className=\"flex flex-center mt-5 p-10\">\r\n            <div className=\"flex flex-center row col-md-12\">\r\n                <Paper className=\"col-md-5 mr-5 mb-5 nation-data-box\">\r\n                    <div className=\"p-5\">\r\n                        <p>Today</p>\r\n                        <p>Cases:  {todayCases??0}</p>\r\n                        <p>Deaths: {todayDeaths??0}</p>\r\n                        <p>Cases per one milion: {casesPerOneMillion??0}</p>\r\n                        <p>Cases per one milion: {deathsPerOneMillion??0}</p>\r\n                    </div>\r\n                </Paper>\r\n                <Paper className=\"col-md-5 mr-5 mb-5 nation-data-box \">\r\n                    <div className=\"p-5\">\r\n                        <p>Total</p>\r\n                        <p>Cases:  {cases??0}</p>\r\n                        <p>Deaths: {deaths??0}</p>\r\n                        <p>Recovered: {recovered??0}</p>\r\n                        <p>Critical: {critical??0}</p>\r\n                        <p>Active: {active??0}</p>\r\n                    </div>\r\n                </Paper>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {Component} from \"react\";\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css';\r\nimport Axios from \"axios\";\r\nimport LoaderComponent from \"../components/LoaderComponent\";\r\nimport NationDataComponent from \"../components/NationDataComponent\";\r\n\r\nclass Nations extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            isLoading:true,\r\n            selectedOption:null,\r\n            nations:[],\r\n            data:null\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await Axios.get(`https://restcountries.eu/rest/v2/all`)\r\n        .then(res => {\r\n\r\n            let data=[];\r\n            res.data.map((nation)=>{\r\n\r\n                if(nation.name=='United States of America'){\r\n\r\n                    nation.name='USA';\r\n                }\r\n\r\n                data[data.length]= {\r\n                    value:nation.name.toLowerCase(),\r\n                    label:nation.name\r\n                }\r\n                return true;\r\n            });\r\n\r\n             this.setState({\r\n                nations:data\r\n             });\r\n\r\n        }).then(()=>this.setState({\r\n\r\n            isLoading:false\r\n        }));\r\n\r\n\r\n    }\r\n\r\n\r\n    _handleOnChange=async (selectedOption)=> {\r\n\r\n        if(selectedOption) {\r\n            this.setState({selectedOption, isLoading: true});\r\n            await this.fetchData(selectedOption);\r\n        } else {\r\n            this.setState({selectedOption:null,data:null});\r\n        }\r\n\r\n    }\r\n\r\n    async fetchData(selectedOption) {\r\n\r\n\r\n        await Axios.get(`https://coronavirus-19-api.herokuapp.com/countries/`+selectedOption.value)\r\n            .then(result => {\r\n\r\n                let {data,status}=result;\r\n                if(status===200){\r\n\r\n                    this.setState({\r\n                        data,\r\n\r\n                    });\r\n\r\n                }\r\n\r\n\r\n            }).then(()=>this.setState({\r\n\r\n                isLoading:false\r\n            }));\r\n    }\r\n\r\n    render() {\r\n\r\n        let {nations,isLoading,selectedOption,data}=this.state;\r\n\r\n        let dataComponent= (!data) ? null : ( <NationDataComponent data={data} ></NationDataComponent> );\r\n        let view= isLoading ? (\r\n            <LoaderComponent></LoaderComponent>\r\n        ) : (\r\n            <div>\r\n                <div className=\"flex flex-center mt-5\">\r\n                    <h2><p className=\"text-white\">Please select a nation</p></h2>\r\n\r\n                </div>\r\n                <div className=\"flex flex-center\">\r\n                    <Select\r\n                        className=\"nation-select\"\r\n                        name=\"form-field-name\"\r\n                        placeholder=\"Select a nation\"\r\n                        value={selectedOption}\r\n                        onChange={this._handleOnChange}\r\n                        options={nations}\r\n                    />\r\n                </div>\r\n                {dataComponent}\r\n            </div>\r\n        );\r\n        return (\r\n            <div className=\"App\">\r\n                {view}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default Nations;\r\n","import React, {Component} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DrawerComponent from \"./Drawer/DrawerComponent\";\r\n\r\nexport default  class HeaderComponent extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            openDrawer:false\r\n        };\r\n    }\r\n\r\n    toggleDrawer= (openDrawer)=> this.setState({openDrawer});\r\n    render() {\r\n        let {openDrawer}= this.state;\r\n        let {drawerItemClick}= this.props;\r\n\r\n        return (\r\n            <div>\r\n                <DrawerComponent onItemClick={(page)=>drawerItemClick(page)} anchor=\"left\" open={openDrawer} onClose={()=>this.toggleDrawer(false)} />\r\n                <header className=\"App-header p-2   \">\r\n                    <a href=\"#\" onClick={()=>drawerItemClick('HomePage')}>\r\n                        <i className=\"fa fa-globe fa-2x mr-3\"></i>\r\n                        Covid Site\r\n                    </a>\r\n                    <div className=\"flex justify-content-end\">\r\n                        <Button variant=\"outlined\" onClick={()=>this.toggleDrawer(true)} ><i className=\"fa fa-bars fa-3x \"></i></Button>\r\n                    </div>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport LoaderComponent from \"../components/LoaderComponent\";\r\nimport HomePage from \"./HomePage\";\r\nimport Axios from \"axios\";\r\nimport Button from '@material-ui/core/Button';\r\nimport DrawerComponent from \"../components/Drawer/DrawerComponent\";\r\nimport Nations from \"./Nations\";\r\nimport HeaderComponent from \"../components/HeaderComponent\";\r\nexport default class Index extends Component{\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            isLoading:true,\r\n            datas:null,\r\n            dataPerDate:null,\r\n            openDrawer:false,\r\n            currentPage:'HomePage'\r\n        };\r\n\r\n        this._handleDrawerItemClick= this._handleDrawerItemClick.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        Axios.get(`https://enrichman.github.io/covid19/world/data.json`)\r\n            .then(res => {\r\n                const datas = res.data;\r\n                this.setState({\r\n                    datas,\r\n                    dataPerDate: datas.ts.reverse()\r\n                });\r\n            }).then(()=>this.setState({\r\n\r\n            isLoading:false\r\n        }));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    _handleDrawerItemClick= (currentPage)=>this.setState({currentPage,openDrawer:false});\r\n\r\n\r\n\r\n    render() {\r\n        let view = this.state.isLoading ? (\r\n            <LoaderComponent></LoaderComponent>\r\n        ) : (\r\n            <div>\r\n                <HeaderComponent openDrawer drawerItemClick={(page)=> this._handleDrawerItemClick(page)}></HeaderComponent>\r\n                { this.renderSwitchComponent() }\r\n            </div>\r\n        );\r\n        return (\r\n\r\n            <div className=\"App\">\r\n                {view}\r\n            </div>\r\n        );\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    renderSwitchComponent() {\r\n\r\n        let {datas,dataPerDate,currentPage}= this.state;\r\n\r\n        switch (currentPage) {\r\n            case \"HomePage\":\r\n                return (<HomePage  items={datas} itemsPerDate={dataPerDate}></HomePage>);\r\n                break;\r\n            case 'Nations':\r\n                return (<Nations></Nations>);\r\n                break;\r\n\r\n            default:\r\n                return (<HomePage></HomePage>)\r\n            break;\r\n        }\r\n    }\r\n}\r\n","import { createBrowserHistory } from 'history';\r\nconst history = createBrowserHistory();\r\nexport default history;\r\n","import React from 'react';\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport HomePage from \"../screens/HomePage\";\r\nimport Index from \"../screens/Index\";\r\nimport Nations from \"../screens/Nations\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport history from '../services/history';\r\nexport default function Routes() {\r\n    return (\r\n        <BrowserRouter history={history} basename={process.env.PUBLIC_URL}>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Index} />\r\n                <Route path=\"/home\" component={HomePage} />\r\n                <Route path=\"/nations\" component={Nations} />\r\n\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport Routes from './components/Routes';\n\nclass App extends Component{\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        return(\n\n            <Routes />\n\n        )\n\n    }\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}